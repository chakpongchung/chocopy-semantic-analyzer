{
  "kind" : "Program",
  "declarations" : [ ],
  "statements" : [ {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 1, 1, 1, 1 ]
      },
      "operator" : "and",
      "right" : {
        "kind" : "IntegerLiteral",
        "value" : 2,
        "location" : [ 1, 7, 1, 7 ]
      },
      "location" : [ 1, 1, 1, 7 ]
    },
    "location" : [ 1, 1, 1, 7 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 2, 1, 2, 1 ]
      },
      "operator" : "or",
      "right" : {
        "kind" : "IntegerLiteral",
        "value" : 2,
        "location" : [ 2, 6, 2, 6 ]
      },
      "location" : [ 2, 1, 2, 6 ]
    },
    "location" : [ 2, 1, 2, 6 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "BooleanLiteral",
        "value" : true,
        "location" : [ 3, 1, 3, 4 ]
      },
      "operator" : "-",
      "right" : {
        "kind" : "BooleanLiteral",
        "value" : false,
        "location" : [ 3, 8, 3, 12 ]
      },
      "location" : [ 3, 1, 3, 12 ]
    },
    "location" : [ 3, 1, 3, 12 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "BooleanLiteral",
        "value" : true,
        "location" : [ 4, 1, 4, 4 ]
      },
      "operator" : "<",
      "right" : {
        "kind" : "BooleanLiteral",
        "value" : false,
        "location" : [ 4, 8, 4, 12 ]
      },
      "location" : [ 4, 1, 4, 12 ]
    },
    "location" : [ 4, 1, 4, 12 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 5, 1, 5, 1 ]
      },
      "operator" : "+",
      "right" : {
        "kind" : "BooleanLiteral",
        "value" : true,
        "location" : [ 5, 5, 5, 8 ]
      },
      "location" : [ 5, 1, 5, 8 ]
    },
    "location" : [ 5, 1, 5, 8 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "BooleanLiteral",
        "value" : false,
        "location" : [ 6, 1, 6, 5 ]
      },
      "operator" : "+",
      "right" : {
        "kind" : "IntegerLiteral",
        "value" : 0,
        "location" : [ 6, 9, 6, 9 ]
      },
      "location" : [ 6, 1, 6, 9 ]
    },
    "location" : [ 6, 1, 6, 9 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 7, 1, 7, 1 ]
      },
      "operator" : "==",
      "right" : {
        "kind" : "BooleanLiteral",
        "value" : true,
        "location" : [ 7, 6, 7, 9 ]
      },
      "location" : [ 7, 1, 7, 9 ]
    },
    "location" : [ 7, 1, 7, 9 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "BooleanLiteral",
        "value" : false,
        "location" : [ 8, 1, 8, 5 ]
      },
      "operator" : "!=",
      "right" : {
        "kind" : "IntegerLiteral",
        "value" : 0,
        "location" : [ 8, 10, 8, 10 ]
      },
      "location" : [ 8, 1, 8, 10 ]
    },
    "location" : [ 8, 1, 8, 10 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 9, 1, 9, 1 ]
      },
      "operator" : "is",
      "right" : {
        "kind" : "IntegerLiteral",
        "value" : 1,
        "location" : [ 9, 6, 9, 6 ]
      },
      "location" : [ 9, 1, 9, 6 ]
    },
    "location" : [ 9, 1, 9, 6 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "BooleanLiteral",
        "value" : true,
        "location" : [ 10, 1, 10, 4 ]
      },
      "operator" : "is",
      "right" : {
        "kind" : "BooleanLiteral",
        "value" : false,
        "location" : [ 10, 9, 10, 13 ]
      },
      "location" : [ 10, 1, 10, 13 ]
    },
    "location" : [ 10, 1, 10, 13 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "NoneLiteral",
        "location" : [ 11, 1, 11, 4 ]
      },
      "operator" : "+",
      "right" : {
        "kind" : "NoneLiteral",
        "location" : [ 11, 8, 11, 11 ]
      },
      "location" : [ 11, 1, 11, 11 ]
    },
    "location" : [ 11, 1, 11, 11 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "NoneLiteral",
        "location" : [ 12, 1, 12, 4 ]
      },
      "operator" : "==",
      "right" : {
        "kind" : "NoneLiteral",
        "location" : [ 12, 9, 12, 12 ]
      },
      "location" : [ 12, 1, 12, 12 ]
    },
    "location" : [ 12, 1, 12, 12 ]
  }, {
    "kind" : "ExprStmt",
    "expr" : {
      "kind" : "BinaryExpr",
      "left" : {
        "kind" : "NoneLiteral",
        "location" : [ 13, 1, 13, 4 ]
      },
      "operator" : "is",
      "right" : {
        "kind" : "NoneLiteral",
        "location" : [ 13, 9, 13, 12 ]
      },
      "location" : [ 13, 1, 13, 12 ]
    },
    "location" : [ 13, 1, 13, 12 ]
  } ],
  "location" : [ 1, 1, 13, 12 ]
}
